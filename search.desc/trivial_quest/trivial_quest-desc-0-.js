searchState.loadedDescShard("trivial_quest", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns an identifier unique among all <code>Gen::next</code> calls …\nAuthor: Ethan\nAuthor: Sidharth Rao\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMoves the player left or right when the arrow keys are …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA fixed physics object.\nA physics object fixed in place and responding to …\nA movable physics object (known as a “movable”). For a …\nA physics object with movement and collisions. Read the …\nThe physics engine uses this component to uniquely …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new movable object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new fixed object,\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMovement systems.\nThe current <em>requested</em> position.\nSee <code>Movable::pos</code>.\n/// The current <em>requested</em> velocity.\nSee <code>Movable::vel</code>.\nThe bounding box is relative to the current transform of …\nThis object does not cause an infeasible location for …\nThis object causes an infeasible location for […\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe acceleration to due gravity.\nUse this component on a <code>Movable</code> to enable gravity.\nApplies a constant acceleration to all <code>Movable</code> <code>Gravity</code> …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA <code>CollisionEvent { movable, fixed, timestamp }</code> is produced …\nRealizes the now-satisfiable requested movement of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCollides solid <code>Movable</code> objects (with position and …\nContains the path to an asset and its size.\nIf exactly one entity has this component, the camera will …\nSets how much to zoom the camera. The default zoom is 1.0. …\nMain camera.\nHandles game rendering, texturing, and cameras.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new asset with the given path and size.\nZooms the <code>MainCamera</code> based on the <code>CameraZoom</code> resource.")